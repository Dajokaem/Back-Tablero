version: '3.9'

services:
  frontend:
    image: revic2112/front-tablero-nginx:latest
    container_name: frontend
    restart: always
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - server

  backend:
    image: revic2112/back-tablero-desarrolloweb:tagname
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DOTNET_USE_POLLING_FILE_WATCHER=true
      - ConnectionStrings__Default=Server=localhost,1433;Database=Tablero_DB;User Id=appuser;Password=AppUserPass!2025;TrustServerCertificate=true;
    depends_on:
      - sqlserver
      - keycloak
    networks:
      - server

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    restart: always
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - server
    deploy:
      resources:
        limits:
          memory: 4g

  sql-init:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      - sqlserver
    volumes:
      - ./script:/scripts
    entrypoint: /bin/bash -c "sleep 15; /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P YourStrong!Passw0rd -i /scripts/init.sql"
    networks:
      - server

  postgres_keycloak:
    image: postgres:15
    container_name: postgres_keycloak
    restart: always
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=KeycloakPass!2025
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    networks:
      - server
    ports:
      - "5432:5432"

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    environment:
      - KC_DB=postgres
      - KC_DB_URL_HOST=postgres_keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=KeycloakPass!2025
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: start-dev
    ports:
      - "8080:8080"
    depends_on:
      - postgres_keycloak
    networks:
      - server
    volumes:
      - keycloak_config:/opt/keycloak/data

volumes:
  sql_data:
  keycloak_data:
  keycloak_config:

networks:
  server: